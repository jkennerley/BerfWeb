//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BerfDacAltIntegrationTest.BerfDataEfContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BerfDbEntities : DbContext
    {
        public BerfDbEntities()
            : base("name=BerfDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BerfClient> BerfClients { get; set; }
        public virtual DbSet<BerfMvc> BerfMvcs { get; set; }
    
        public virtual int lsp_DeleteBerfClient(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("lsp_DeleteBerfClient", idParameter);
        }
    
        public virtual int lsp_InsertBerfClient(Nullable<System.Guid> id, Nullable<System.Guid> sessionId, Nullable<System.Guid> renderId, Nullable<int> ord, string url, string entryType, string source, string created, Nullable<double> unloadEventStart, Nullable<double> unloadEventEnd, Nullable<double> linkNegotiationStart, Nullable<double> linkNegotiationEnd, Nullable<double> redirectStart, Nullable<double> redirectEnd, Nullable<double> fetchStart, Nullable<double> domainLookupStart, Nullable<double> domainLookupEnd, Nullable<double> connectStart, Nullable<double> connectEnd, Nullable<double> secureConnectionStart, Nullable<double> requestStart, Nullable<double> responseStart, Nullable<double> responseEnd, Nullable<double> domLoading, Nullable<double> domInteractive, Nullable<double> domContentLoadedEventStart, Nullable<double> domContentLoadedEventEnd, Nullable<double> domComplete, Nullable<double> loadEventStart, Nullable<double> loadEventEnd, Nullable<double> prerenderSwitch, Nullable<int> redirectCount, string initiatorType, string name, Nullable<double> startTime, Nullable<double> duration, Nullable<double> navigationStart, string userName, string clientIP, string userAgent, string browser, string browserVersion, string hostMachineName)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("sessionId", sessionId) :
                new ObjectParameter("sessionId", typeof(System.Guid));
    
            var renderIdParameter = renderId.HasValue ?
                new ObjectParameter("renderId", renderId) :
                new ObjectParameter("renderId", typeof(System.Guid));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("ord", ord) :
                new ObjectParameter("ord", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var entryTypeParameter = entryType != null ?
                new ObjectParameter("entryType", entryType) :
                new ObjectParameter("entryType", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var createdParameter = created != null ?
                new ObjectParameter("created", created) :
                new ObjectParameter("created", typeof(string));
    
            var unloadEventStartParameter = unloadEventStart.HasValue ?
                new ObjectParameter("unloadEventStart", unloadEventStart) :
                new ObjectParameter("unloadEventStart", typeof(double));
    
            var unloadEventEndParameter = unloadEventEnd.HasValue ?
                new ObjectParameter("unloadEventEnd", unloadEventEnd) :
                new ObjectParameter("unloadEventEnd", typeof(double));
    
            var linkNegotiationStartParameter = linkNegotiationStart.HasValue ?
                new ObjectParameter("linkNegotiationStart", linkNegotiationStart) :
                new ObjectParameter("linkNegotiationStart", typeof(double));
    
            var linkNegotiationEndParameter = linkNegotiationEnd.HasValue ?
                new ObjectParameter("linkNegotiationEnd", linkNegotiationEnd) :
                new ObjectParameter("linkNegotiationEnd", typeof(double));
    
            var redirectStartParameter = redirectStart.HasValue ?
                new ObjectParameter("redirectStart", redirectStart) :
                new ObjectParameter("redirectStart", typeof(double));
    
            var redirectEndParameter = redirectEnd.HasValue ?
                new ObjectParameter("redirectEnd", redirectEnd) :
                new ObjectParameter("redirectEnd", typeof(double));
    
            var fetchStartParameter = fetchStart.HasValue ?
                new ObjectParameter("fetchStart", fetchStart) :
                new ObjectParameter("fetchStart", typeof(double));
    
            var domainLookupStartParameter = domainLookupStart.HasValue ?
                new ObjectParameter("domainLookupStart", domainLookupStart) :
                new ObjectParameter("domainLookupStart", typeof(double));
    
            var domainLookupEndParameter = domainLookupEnd.HasValue ?
                new ObjectParameter("domainLookupEnd", domainLookupEnd) :
                new ObjectParameter("domainLookupEnd", typeof(double));
    
            var connectStartParameter = connectStart.HasValue ?
                new ObjectParameter("connectStart", connectStart) :
                new ObjectParameter("connectStart", typeof(double));
    
            var connectEndParameter = connectEnd.HasValue ?
                new ObjectParameter("connectEnd", connectEnd) :
                new ObjectParameter("connectEnd", typeof(double));
    
            var secureConnectionStartParameter = secureConnectionStart.HasValue ?
                new ObjectParameter("secureConnectionStart", secureConnectionStart) :
                new ObjectParameter("secureConnectionStart", typeof(double));
    
            var requestStartParameter = requestStart.HasValue ?
                new ObjectParameter("requestStart", requestStart) :
                new ObjectParameter("requestStart", typeof(double));
    
            var responseStartParameter = responseStart.HasValue ?
                new ObjectParameter("responseStart", responseStart) :
                new ObjectParameter("responseStart", typeof(double));
    
            var responseEndParameter = responseEnd.HasValue ?
                new ObjectParameter("responseEnd", responseEnd) :
                new ObjectParameter("responseEnd", typeof(double));
    
            var domLoadingParameter = domLoading.HasValue ?
                new ObjectParameter("domLoading", domLoading) :
                new ObjectParameter("domLoading", typeof(double));
    
            var domInteractiveParameter = domInteractive.HasValue ?
                new ObjectParameter("domInteractive", domInteractive) :
                new ObjectParameter("domInteractive", typeof(double));
    
            var domContentLoadedEventStartParameter = domContentLoadedEventStart.HasValue ?
                new ObjectParameter("domContentLoadedEventStart", domContentLoadedEventStart) :
                new ObjectParameter("domContentLoadedEventStart", typeof(double));
    
            var domContentLoadedEventEndParameter = domContentLoadedEventEnd.HasValue ?
                new ObjectParameter("domContentLoadedEventEnd", domContentLoadedEventEnd) :
                new ObjectParameter("domContentLoadedEventEnd", typeof(double));
    
            var domCompleteParameter = domComplete.HasValue ?
                new ObjectParameter("domComplete", domComplete) :
                new ObjectParameter("domComplete", typeof(double));
    
            var loadEventStartParameter = loadEventStart.HasValue ?
                new ObjectParameter("loadEventStart", loadEventStart) :
                new ObjectParameter("loadEventStart", typeof(double));
    
            var loadEventEndParameter = loadEventEnd.HasValue ?
                new ObjectParameter("loadEventEnd", loadEventEnd) :
                new ObjectParameter("loadEventEnd", typeof(double));
    
            var prerenderSwitchParameter = prerenderSwitch.HasValue ?
                new ObjectParameter("prerenderSwitch", prerenderSwitch) :
                new ObjectParameter("prerenderSwitch", typeof(double));
    
            var redirectCountParameter = redirectCount.HasValue ?
                new ObjectParameter("redirectCount", redirectCount) :
                new ObjectParameter("redirectCount", typeof(int));
    
            var initiatorTypeParameter = initiatorType != null ?
                new ObjectParameter("initiatorType", initiatorType) :
                new ObjectParameter("initiatorType", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(double));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(double));
    
            var navigationStartParameter = navigationStart.HasValue ?
                new ObjectParameter("navigationStart", navigationStart) :
                new ObjectParameter("navigationStart", typeof(double));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var clientIPParameter = clientIP != null ?
                new ObjectParameter("clientIP", clientIP) :
                new ObjectParameter("clientIP", typeof(string));
    
            var userAgentParameter = userAgent != null ?
                new ObjectParameter("userAgent", userAgent) :
                new ObjectParameter("userAgent", typeof(string));
    
            var browserParameter = browser != null ?
                new ObjectParameter("browser", browser) :
                new ObjectParameter("browser", typeof(string));
    
            var browserVersionParameter = browserVersion != null ?
                new ObjectParameter("browserVersion", browserVersion) :
                new ObjectParameter("browserVersion", typeof(string));
    
            var hostMachineNameParameter = hostMachineName != null ?
                new ObjectParameter("hostMachineName", hostMachineName) :
                new ObjectParameter("hostMachineName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("lsp_InsertBerfClient", idParameter, sessionIdParameter, renderIdParameter, ordParameter, urlParameter, entryTypeParameter, sourceParameter, createdParameter, unloadEventStartParameter, unloadEventEndParameter, linkNegotiationStartParameter, linkNegotiationEndParameter, redirectStartParameter, redirectEndParameter, fetchStartParameter, domainLookupStartParameter, domainLookupEndParameter, connectStartParameter, connectEndParameter, secureConnectionStartParameter, requestStartParameter, responseStartParameter, responseEndParameter, domLoadingParameter, domInteractiveParameter, domContentLoadedEventStartParameter, domContentLoadedEventEndParameter, domCompleteParameter, loadEventStartParameter, loadEventEndParameter, prerenderSwitchParameter, redirectCountParameter, initiatorTypeParameter, nameParameter, startTimeParameter, durationParameter, navigationStartParameter, userNameParameter, clientIPParameter, userAgentParameter, browserParameter, browserVersionParameter, hostMachineNameParameter);
        }
    
        public virtual ObjectResult<lsp_ReadBerfClient_Result> lsp_ReadBerfClient(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lsp_ReadBerfClient_Result>("lsp_ReadBerfClient", idParameter);
        }
    
        public virtual ObjectResult<lsp_ReadBerfClientWithNoLock_Result> lsp_ReadBerfClientWithNoLock(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<lsp_ReadBerfClientWithNoLock_Result>("lsp_ReadBerfClientWithNoLock", idParameter);
        }
    
        public virtual int lsp_UpdateBerfClient(Nullable<System.Guid> id, Nullable<System.Guid> sessionId, Nullable<System.Guid> renderId, Nullable<int> ord, string url, string entryType, string source, string created, Nullable<double> unloadEventStart, Nullable<double> unloadEventEnd, Nullable<double> linkNegotiationStart, Nullable<double> linkNegotiationEnd, Nullable<double> redirectStart, Nullable<double> redirectEnd, Nullable<double> fetchStart, Nullable<double> domainLookupStart, Nullable<double> domainLookupEnd, Nullable<double> connectStart, Nullable<double> connectEnd, Nullable<double> secureConnectionStart, Nullable<double> requestStart, Nullable<double> responseStart, Nullable<double> responseEnd, Nullable<double> domLoading, Nullable<double> domInteractive, Nullable<double> domContentLoadedEventStart, Nullable<double> domContentLoadedEventEnd, Nullable<double> domComplete, Nullable<double> loadEventStart, Nullable<double> loadEventEnd, Nullable<double> prerenderSwitch, Nullable<int> redirectCount, string initiatorType, string name, Nullable<double> startTime, Nullable<double> duration, Nullable<double> navigationStart, string userName, string clientIP, string userAgent, string browser, string browserVersion, string hostMachineName)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("sessionId", sessionId) :
                new ObjectParameter("sessionId", typeof(System.Guid));
    
            var renderIdParameter = renderId.HasValue ?
                new ObjectParameter("renderId", renderId) :
                new ObjectParameter("renderId", typeof(System.Guid));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("ord", ord) :
                new ObjectParameter("ord", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var entryTypeParameter = entryType != null ?
                new ObjectParameter("entryType", entryType) :
                new ObjectParameter("entryType", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var createdParameter = created != null ?
                new ObjectParameter("created", created) :
                new ObjectParameter("created", typeof(string));
    
            var unloadEventStartParameter = unloadEventStart.HasValue ?
                new ObjectParameter("unloadEventStart", unloadEventStart) :
                new ObjectParameter("unloadEventStart", typeof(double));
    
            var unloadEventEndParameter = unloadEventEnd.HasValue ?
                new ObjectParameter("unloadEventEnd", unloadEventEnd) :
                new ObjectParameter("unloadEventEnd", typeof(double));
    
            var linkNegotiationStartParameter = linkNegotiationStart.HasValue ?
                new ObjectParameter("linkNegotiationStart", linkNegotiationStart) :
                new ObjectParameter("linkNegotiationStart", typeof(double));
    
            var linkNegotiationEndParameter = linkNegotiationEnd.HasValue ?
                new ObjectParameter("linkNegotiationEnd", linkNegotiationEnd) :
                new ObjectParameter("linkNegotiationEnd", typeof(double));
    
            var redirectStartParameter = redirectStart.HasValue ?
                new ObjectParameter("redirectStart", redirectStart) :
                new ObjectParameter("redirectStart", typeof(double));
    
            var redirectEndParameter = redirectEnd.HasValue ?
                new ObjectParameter("redirectEnd", redirectEnd) :
                new ObjectParameter("redirectEnd", typeof(double));
    
            var fetchStartParameter = fetchStart.HasValue ?
                new ObjectParameter("fetchStart", fetchStart) :
                new ObjectParameter("fetchStart", typeof(double));
    
            var domainLookupStartParameter = domainLookupStart.HasValue ?
                new ObjectParameter("domainLookupStart", domainLookupStart) :
                new ObjectParameter("domainLookupStart", typeof(double));
    
            var domainLookupEndParameter = domainLookupEnd.HasValue ?
                new ObjectParameter("domainLookupEnd", domainLookupEnd) :
                new ObjectParameter("domainLookupEnd", typeof(double));
    
            var connectStartParameter = connectStart.HasValue ?
                new ObjectParameter("connectStart", connectStart) :
                new ObjectParameter("connectStart", typeof(double));
    
            var connectEndParameter = connectEnd.HasValue ?
                new ObjectParameter("connectEnd", connectEnd) :
                new ObjectParameter("connectEnd", typeof(double));
    
            var secureConnectionStartParameter = secureConnectionStart.HasValue ?
                new ObjectParameter("secureConnectionStart", secureConnectionStart) :
                new ObjectParameter("secureConnectionStart", typeof(double));
    
            var requestStartParameter = requestStart.HasValue ?
                new ObjectParameter("requestStart", requestStart) :
                new ObjectParameter("requestStart", typeof(double));
    
            var responseStartParameter = responseStart.HasValue ?
                new ObjectParameter("responseStart", responseStart) :
                new ObjectParameter("responseStart", typeof(double));
    
            var responseEndParameter = responseEnd.HasValue ?
                new ObjectParameter("responseEnd", responseEnd) :
                new ObjectParameter("responseEnd", typeof(double));
    
            var domLoadingParameter = domLoading.HasValue ?
                new ObjectParameter("domLoading", domLoading) :
                new ObjectParameter("domLoading", typeof(double));
    
            var domInteractiveParameter = domInteractive.HasValue ?
                new ObjectParameter("domInteractive", domInteractive) :
                new ObjectParameter("domInteractive", typeof(double));
    
            var domContentLoadedEventStartParameter = domContentLoadedEventStart.HasValue ?
                new ObjectParameter("domContentLoadedEventStart", domContentLoadedEventStart) :
                new ObjectParameter("domContentLoadedEventStart", typeof(double));
    
            var domContentLoadedEventEndParameter = domContentLoadedEventEnd.HasValue ?
                new ObjectParameter("domContentLoadedEventEnd", domContentLoadedEventEnd) :
                new ObjectParameter("domContentLoadedEventEnd", typeof(double));
    
            var domCompleteParameter = domComplete.HasValue ?
                new ObjectParameter("domComplete", domComplete) :
                new ObjectParameter("domComplete", typeof(double));
    
            var loadEventStartParameter = loadEventStart.HasValue ?
                new ObjectParameter("loadEventStart", loadEventStart) :
                new ObjectParameter("loadEventStart", typeof(double));
    
            var loadEventEndParameter = loadEventEnd.HasValue ?
                new ObjectParameter("loadEventEnd", loadEventEnd) :
                new ObjectParameter("loadEventEnd", typeof(double));
    
            var prerenderSwitchParameter = prerenderSwitch.HasValue ?
                new ObjectParameter("prerenderSwitch", prerenderSwitch) :
                new ObjectParameter("prerenderSwitch", typeof(double));
    
            var redirectCountParameter = redirectCount.HasValue ?
                new ObjectParameter("redirectCount", redirectCount) :
                new ObjectParameter("redirectCount", typeof(int));
    
            var initiatorTypeParameter = initiatorType != null ?
                new ObjectParameter("initiatorType", initiatorType) :
                new ObjectParameter("initiatorType", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(double));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(double));
    
            var navigationStartParameter = navigationStart.HasValue ?
                new ObjectParameter("navigationStart", navigationStart) :
                new ObjectParameter("navigationStart", typeof(double));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var clientIPParameter = clientIP != null ?
                new ObjectParameter("clientIP", clientIP) :
                new ObjectParameter("clientIP", typeof(string));
    
            var userAgentParameter = userAgent != null ?
                new ObjectParameter("userAgent", userAgent) :
                new ObjectParameter("userAgent", typeof(string));
    
            var browserParameter = browser != null ?
                new ObjectParameter("browser", browser) :
                new ObjectParameter("browser", typeof(string));
    
            var browserVersionParameter = browserVersion != null ?
                new ObjectParameter("browserVersion", browserVersion) :
                new ObjectParameter("browserVersion", typeof(string));
    
            var hostMachineNameParameter = hostMachineName != null ?
                new ObjectParameter("hostMachineName", hostMachineName) :
                new ObjectParameter("hostMachineName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("lsp_UpdateBerfClient", idParameter, sessionIdParameter, renderIdParameter, ordParameter, urlParameter, entryTypeParameter, sourceParameter, createdParameter, unloadEventStartParameter, unloadEventEndParameter, linkNegotiationStartParameter, linkNegotiationEndParameter, redirectStartParameter, redirectEndParameter, fetchStartParameter, domainLookupStartParameter, domainLookupEndParameter, connectStartParameter, connectEndParameter, secureConnectionStartParameter, requestStartParameter, responseStartParameter, responseEndParameter, domLoadingParameter, domInteractiveParameter, domContentLoadedEventStartParameter, domContentLoadedEventEndParameter, domCompleteParameter, loadEventStartParameter, loadEventEndParameter, prerenderSwitchParameter, redirectCountParameter, initiatorTypeParameter, nameParameter, startTimeParameter, durationParameter, navigationStartParameter, userNameParameter, clientIPParameter, userAgentParameter, browserParameter, browserVersionParameter, hostMachineNameParameter);
        }
    
        public virtual int lsp_UpsertBerfClient(Nullable<System.Guid> id, Nullable<System.Guid> sessionId, Nullable<System.Guid> renderId, Nullable<int> ord, string url, string entryType, string source, string created, Nullable<double> unloadEventStart, Nullable<double> unloadEventEnd, Nullable<double> linkNegotiationStart, Nullable<double> linkNegotiationEnd, Nullable<double> redirectStart, Nullable<double> redirectEnd, Nullable<double> fetchStart, Nullable<double> domainLookupStart, Nullable<double> domainLookupEnd, Nullable<double> connectStart, Nullable<double> connectEnd, Nullable<double> secureConnectionStart, Nullable<double> requestStart, Nullable<double> responseStart, Nullable<double> responseEnd, Nullable<double> domLoading, Nullable<double> domInteractive, Nullable<double> domContentLoadedEventStart, Nullable<double> domContentLoadedEventEnd, Nullable<double> domComplete, Nullable<double> loadEventStart, Nullable<double> loadEventEnd, Nullable<double> prerenderSwitch, Nullable<int> redirectCount, string initiatorType, string name, Nullable<double> startTime, Nullable<double> duration, Nullable<double> navigationStart, string userName, string clientIP, string userAgent, string browser, string browserVersion, string hostMachineName)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            var sessionIdParameter = sessionId.HasValue ?
                new ObjectParameter("sessionId", sessionId) :
                new ObjectParameter("sessionId", typeof(System.Guid));
    
            var renderIdParameter = renderId.HasValue ?
                new ObjectParameter("renderId", renderId) :
                new ObjectParameter("renderId", typeof(System.Guid));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("ord", ord) :
                new ObjectParameter("ord", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("url", url) :
                new ObjectParameter("url", typeof(string));
    
            var entryTypeParameter = entryType != null ?
                new ObjectParameter("entryType", entryType) :
                new ObjectParameter("entryType", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var createdParameter = created != null ?
                new ObjectParameter("created", created) :
                new ObjectParameter("created", typeof(string));
    
            var unloadEventStartParameter = unloadEventStart.HasValue ?
                new ObjectParameter("unloadEventStart", unloadEventStart) :
                new ObjectParameter("unloadEventStart", typeof(double));
    
            var unloadEventEndParameter = unloadEventEnd.HasValue ?
                new ObjectParameter("unloadEventEnd", unloadEventEnd) :
                new ObjectParameter("unloadEventEnd", typeof(double));
    
            var linkNegotiationStartParameter = linkNegotiationStart.HasValue ?
                new ObjectParameter("linkNegotiationStart", linkNegotiationStart) :
                new ObjectParameter("linkNegotiationStart", typeof(double));
    
            var linkNegotiationEndParameter = linkNegotiationEnd.HasValue ?
                new ObjectParameter("linkNegotiationEnd", linkNegotiationEnd) :
                new ObjectParameter("linkNegotiationEnd", typeof(double));
    
            var redirectStartParameter = redirectStart.HasValue ?
                new ObjectParameter("redirectStart", redirectStart) :
                new ObjectParameter("redirectStart", typeof(double));
    
            var redirectEndParameter = redirectEnd.HasValue ?
                new ObjectParameter("redirectEnd", redirectEnd) :
                new ObjectParameter("redirectEnd", typeof(double));
    
            var fetchStartParameter = fetchStart.HasValue ?
                new ObjectParameter("fetchStart", fetchStart) :
                new ObjectParameter("fetchStart", typeof(double));
    
            var domainLookupStartParameter = domainLookupStart.HasValue ?
                new ObjectParameter("domainLookupStart", domainLookupStart) :
                new ObjectParameter("domainLookupStart", typeof(double));
    
            var domainLookupEndParameter = domainLookupEnd.HasValue ?
                new ObjectParameter("domainLookupEnd", domainLookupEnd) :
                new ObjectParameter("domainLookupEnd", typeof(double));
    
            var connectStartParameter = connectStart.HasValue ?
                new ObjectParameter("connectStart", connectStart) :
                new ObjectParameter("connectStart", typeof(double));
    
            var connectEndParameter = connectEnd.HasValue ?
                new ObjectParameter("connectEnd", connectEnd) :
                new ObjectParameter("connectEnd", typeof(double));
    
            var secureConnectionStartParameter = secureConnectionStart.HasValue ?
                new ObjectParameter("secureConnectionStart", secureConnectionStart) :
                new ObjectParameter("secureConnectionStart", typeof(double));
    
            var requestStartParameter = requestStart.HasValue ?
                new ObjectParameter("requestStart", requestStart) :
                new ObjectParameter("requestStart", typeof(double));
    
            var responseStartParameter = responseStart.HasValue ?
                new ObjectParameter("responseStart", responseStart) :
                new ObjectParameter("responseStart", typeof(double));
    
            var responseEndParameter = responseEnd.HasValue ?
                new ObjectParameter("responseEnd", responseEnd) :
                new ObjectParameter("responseEnd", typeof(double));
    
            var domLoadingParameter = domLoading.HasValue ?
                new ObjectParameter("domLoading", domLoading) :
                new ObjectParameter("domLoading", typeof(double));
    
            var domInteractiveParameter = domInteractive.HasValue ?
                new ObjectParameter("domInteractive", domInteractive) :
                new ObjectParameter("domInteractive", typeof(double));
    
            var domContentLoadedEventStartParameter = domContentLoadedEventStart.HasValue ?
                new ObjectParameter("domContentLoadedEventStart", domContentLoadedEventStart) :
                new ObjectParameter("domContentLoadedEventStart", typeof(double));
    
            var domContentLoadedEventEndParameter = domContentLoadedEventEnd.HasValue ?
                new ObjectParameter("domContentLoadedEventEnd", domContentLoadedEventEnd) :
                new ObjectParameter("domContentLoadedEventEnd", typeof(double));
    
            var domCompleteParameter = domComplete.HasValue ?
                new ObjectParameter("domComplete", domComplete) :
                new ObjectParameter("domComplete", typeof(double));
    
            var loadEventStartParameter = loadEventStart.HasValue ?
                new ObjectParameter("loadEventStart", loadEventStart) :
                new ObjectParameter("loadEventStart", typeof(double));
    
            var loadEventEndParameter = loadEventEnd.HasValue ?
                new ObjectParameter("loadEventEnd", loadEventEnd) :
                new ObjectParameter("loadEventEnd", typeof(double));
    
            var prerenderSwitchParameter = prerenderSwitch.HasValue ?
                new ObjectParameter("prerenderSwitch", prerenderSwitch) :
                new ObjectParameter("prerenderSwitch", typeof(double));
    
            var redirectCountParameter = redirectCount.HasValue ?
                new ObjectParameter("redirectCount", redirectCount) :
                new ObjectParameter("redirectCount", typeof(int));
    
            var initiatorTypeParameter = initiatorType != null ?
                new ObjectParameter("initiatorType", initiatorType) :
                new ObjectParameter("initiatorType", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("startTime", startTime) :
                new ObjectParameter("startTime", typeof(double));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(double));
    
            var navigationStartParameter = navigationStart.HasValue ?
                new ObjectParameter("navigationStart", navigationStart) :
                new ObjectParameter("navigationStart", typeof(double));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var clientIPParameter = clientIP != null ?
                new ObjectParameter("clientIP", clientIP) :
                new ObjectParameter("clientIP", typeof(string));
    
            var userAgentParameter = userAgent != null ?
                new ObjectParameter("userAgent", userAgent) :
                new ObjectParameter("userAgent", typeof(string));
    
            var browserParameter = browser != null ?
                new ObjectParameter("browser", browser) :
                new ObjectParameter("browser", typeof(string));
    
            var browserVersionParameter = browserVersion != null ?
                new ObjectParameter("browserVersion", browserVersion) :
                new ObjectParameter("browserVersion", typeof(string));
    
            var hostMachineNameParameter = hostMachineName != null ?
                new ObjectParameter("hostMachineName", hostMachineName) :
                new ObjectParameter("hostMachineName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("lsp_UpsertBerfClient", idParameter, sessionIdParameter, renderIdParameter, ordParameter, urlParameter, entryTypeParameter, sourceParameter, createdParameter, unloadEventStartParameter, unloadEventEndParameter, linkNegotiationStartParameter, linkNegotiationEndParameter, redirectStartParameter, redirectEndParameter, fetchStartParameter, domainLookupStartParameter, domainLookupEndParameter, connectStartParameter, connectEndParameter, secureConnectionStartParameter, requestStartParameter, responseStartParameter, responseEndParameter, domLoadingParameter, domInteractiveParameter, domContentLoadedEventStartParameter, domContentLoadedEventEndParameter, domCompleteParameter, loadEventStartParameter, loadEventEndParameter, prerenderSwitchParameter, redirectCountParameter, initiatorTypeParameter, nameParameter, startTimeParameter, durationParameter, navigationStartParameter, userNameParameter, clientIPParameter, userAgentParameter, browserParameter, browserVersionParameter, hostMachineNameParameter);
        }
    }
}
